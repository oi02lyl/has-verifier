Relations:
Order(i id, Item iid, NUM amount, Customer cid)
Item(i id, NUM price, STR available)
Customer(i id, STR name, STR record, CreditCard card_id)
CreditCard(i id, STR name, STR status)

Hierarchy:
ReceiveOrder -> ProcessOrder,
ProcessOrder -> PayWithCreditCard

ReceiveOrder:
Variables: Order oid, Item iid, NUM amount, Customer cid, STR status
Input:
Return:
Open: True
Close: False

Services:

Receive:
Pre: True
Post: Order(oid, iid, amount, cid) && (((Item(iid, _, "True") && Customer(cid, _, "Good", _)) -> status = "Accepted") || ((Item(iid, _, "False") || Customer(cid, _, "Bad", _)) -> status = "Rejected"))
Update: Write(oid, iid, amount, cid)

AddCandidateOrder:
Pre: True
Post: True
Update: ++Candidate(oid)

RetrieveCandidateOrder:
Pre: True
Post: Order(oid, iid, amount, cid) && (((Item(iid, _, "True") && Customer(cid, _, "Good", _)) -> status = "Accepted") || ((Item(iid, _, "False") || Customer(cid, _, "Bad", _)) -> status = "Rejected"))
Update: --Candidate(oid)

CloseOrder:
Pre: status == "Rejected" || status == "Shipped"
Post: True
Update: ++Record(oid, status)

------

ProcessOrder:
Variables: Order oid, Item iid, NUM amount, NUM price, Customer cid, STR name, CreditCard card_id, STR status, NUM total
Input: oid
Return: status
Open: status == "Accepted"
Close: status == "Shipped"

Services:

FillOrder:
Pre: oid != NULL
Post: status == "OrderFilled" && Order(oid, iid, amount, cid) && Customer(cid, name, _, card_id) && Item(iid, price, _) && total = amount * price
Update: Write(iid, amount, cid, name, card_id, price, total, status)

SendInvoice:
Pre: total != 0
Post: status == "InvoiceSent"
Update: ++Invoice(name, card_id, total), Write(status)

ShipOrder:
Pre: total != 0 && status == "PaymentAccepted"
Post: status == "Shipped"
Update: ++Shipment(name, iid, amount)

MakePayment:
Pre: status == "InvoiceSent"
Post: status == "Paid"
Update: --Invoice(name, card_id, total)

------

PayWithCreditCard:
Variables: NUM total, STR name, CreditCard card_id, STR status
Input: total, name, card_id
Return: status
Open: status == "Paid"
Close: status == "PaymentAccepted"

Services:

Pay:
Pre: status == ""
Post: (CreditCard(card_id, name, "Good") -> status == "PaymentAccepted") || (!CreditCard(card_id, name, "Good") -> status == "PaymentNotAccepted")
Update: Write(status)

------