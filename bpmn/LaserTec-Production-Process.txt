Relations:
Customer(i id, STR name, STR address)
Order(i id, Component c1, Component c2, Component c3, STR install, NUM totalPrice) 
Component (i csid, NUM price)

Hierarchy:
CreateOrder -> PlaceOrder,
CreateOrder -> AssembleParts

CreateOrder:
Variables: Order oid, STR status, NUM totalPrice, Customer cid, Component c1, Component c2, Component c3, STR install, NUM c1price, NUM c2price, NUM c3price, Customer cid
Input:
Return: 
Open: True
Close: False

Services:

InitializeOrder:
Pre: True
Post: oid != NULL && (c1 != NULL -> Component (c1, c1price)) && (c2 != NULL -> Component (c2, c2price)) && ((c3!=NULL) -> Component (c3, c3price)) && totalPrice == (c1price+c2price + c3price) && install != NULL && status == "orderInitialized" && cid != NULL 
Update: Write(oid, totalPrice, install, cid, c1, c2, c3, c1price, c2price, c3price, status)

------

PlaceOrder:
Variables: STR status, STR address, NUM totalPrice
Input: totalPrice
Return: status
Open: status == "orderInitialized"
Close: status == "orderPlaced"

Services:

orderConfirm:
Pre: status == "orderInitialized"
Post: address!= NULL && totalPrice > 0 && status == "orderPlaced"
Update: Write (status, address)

------

AssembleParts:
Variables: STR status, Component c1, Component c2, Component c3
Input: c1, c2, c3
Return: status
Open: status == "orderPlaced"
Close: status == "PartsAssembled"

Services:

orderLaserParts:
Pre: status == "orderPlaced"
Post: (c1 != NULL || c2!=NULL || c3!=NULL) && status == "PartsAssembled"
Update: Write (status)

------
